{
  "graphql_operation_files": [
    {
      "operation_name": "Alldrugs",
      "api_mount_path": "Alldrugs",
      "file_path": "Alldrugs.graphql",
      "content": "query Alldrugs {backend_drugs {data {id attributes {title}}}}"
    },
    {
      "operation_name": "CreateUser",
      "api_mount_path": "CreateUser",
      "file_path": "CreateUser.graphql",
      "content": ""
    },
    {
      "operation_name": "Dragons",
      "api_mount_path": "Dragons",
      "file_path": "Dragons.graphql",
      "content": "query Dragons {spacex_dragons {name active}}"
    },
    {
      "operation_name": "Login",
      "api_mount_path": "Login",
      "file_path": "Login.graphql",
      "content": "mutation Login($identifier: String!, $password: String!){backend_login(input: {identifier: $identifier,password: $password}){jwt user {id username email}}}"
    },
    {
      "operation_name": "NewDrug",
      "api_mount_path": "newDrug",
      "file_path": "newDrug.graphql",
      "content": "mutation NewDrug {backend_createDrug(data: {title: \"tutu\"}){data {id attributes {title}}}}"
    }
  ],
  "typescript_operation_files": [
    {
      "operation_name": "UsersGet",
      "api_mount_path": "users/get",
      "file_path": "users\\get.ts",
      "module_path": "generated/bundle/operations/users/get"
    },
    {
      "operation_name": "UsersSubscribe",
      "api_mount_path": "users/subscribe",
      "file_path": "users\\subscribe.ts",
      "module_path": "generated/bundle/operations/users/subscribe"
    },
    {
      "operation_name": "UsersUpdate",
      "api_mount_path": "users/update",
      "file_path": "users\\update.ts",
      "module_path": "generated/bundle/operations/users/update"
    }
  ],
  "invalid": [
    "CreateUser"
  ],
  "errors": [
    "error normalizing operation: external: field: id not defined on type: backend_UsersPermissionsUserEntityResponse, locations: [], path: [mutation,backend_createUsersPermissionsUser,id], operationFilePath: CreateUser.graphql"
  ]
}