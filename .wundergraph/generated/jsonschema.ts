// Code generated by wunderctl. DO NOT EDIT.

// @ts-ignore: no-types available
import { JSONSchema7 } from "json-schema";

interface Schema {
	Alldrugs: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	Dragons: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	NewDrug: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UsersGet: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UsersSubscribe: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
	UsersUpdate: {
		input: JSONSchema7;
		response: JSONSchema7;
	};
}

const jsonSchema: Schema = {
	Alldrugs: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						backend_drugs: {
							type: "object",
							properties: {
								data: {
									type: "array",
									items: {
										type: "object",
										properties: {
											id: { type: "string" },
											attributes: {
												type: "object",
												properties: { title: { type: "string" } },
												additionalProperties: false,
											},
										},
										additionalProperties: false,
									},
								},
							},
							additionalProperties: false,
							required: ["data"],
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	Dragons: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						spacex_dragons: {
							type: "array",
							items: {
								type: "object",
								properties: { name: { type: "string" }, active: { type: "boolean" } },
								additionalProperties: false,
							},
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	NewDrug: {
		input: { type: "object", properties: {}, additionalProperties: false, definitions: {} },
		response: {
			type: "object",
			properties: {
				data: {
					type: "object",
					properties: {
						backend_createDrug: {
							type: "object",
							properties: {
								data: {
									type: "object",
									properties: {
										id: { type: "string" },
										attributes: {
											type: "object",
											properties: { title: { type: "string" } },
											additionalProperties: false,
										},
									},
									additionalProperties: false,
								},
							},
							additionalProperties: false,
						},
					},
					additionalProperties: false,
				},
			},
			additionalProperties: false,
		},
	},
	UsersGet: {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { data: {} } },
	},
	UsersSubscribe: {
		input: {
			type: "object",
			properties: { id: { type: "string" } },
			required: ["id"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { data: {} } },
	},
	UsersUpdate: {
		input: {
			type: "object",
			properties: { id: { type: "string" }, name: { type: "string" }, bio: { type: "string" } },
			required: ["id", "name", "bio"],
			additionalProperties: false,
			$schema: "http://json-schema.org/draft-07/schema#",
		},
		response: { type: "object", properties: { data: {} } },
	},
};
export default jsonSchema;
